name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ '**' ]

permissions:
  contents: read

jobs:
  backend:
    name: Backend (Laravel)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo_mysql, sqlite3
          coverage: none

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: |
            backend/vendor
            backend/composer.lock
          key: ${{ runner.os }}-composer-${{ hashFiles('backend/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-interaction --no-progress --prefer-dist

      - name: Create environment file
        run: |
          if [ ! -f .env ]; then cp .env.example .env; fi
          php artisan key:generate --force

      - name: Configure SQLite for testing
        run: |
          mkdir -p database
          touch database/database.sqlite
          {
            echo "DB_CONNECTION=sqlite";
            echo "DB_DATABASE=${{ github.workspace }}/backend/database/database.sqlite";
          } >> .env

      - name: Application info
        run: |
          php -v
          php artisan --version

      - name: Run tests
        env:
          APP_ENV: testing
        run: |
          php artisan config:clear
          php artisan test --without-tty -q

  frontend:
    name: Frontend (Vite/Vue)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Build
        run: npm run build
